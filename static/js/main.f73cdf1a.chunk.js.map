{"version":3,"sources":["components/cards/styles.js","components/cards/Cards.jsx","util/constants.js","redux/actions/charactersAction.js","pages/charactersList/styles.js","pages/charactersList/CharactersList.jsx","pages/characterDetail/styles.js","pages/characterDetail/CharacterDetail.jsx","util/routes.js","util/assets/marvel.svg","components/header/styles.js","components/header/Header.js","App.js","redux/reducers/charactersReducer.js","redux/rootReducer.js","reportWebVitals.js","index.js"],"names":["Card","styled","div","connect","state","list","character","props","console","log","useState","saved","localStorage","getItem","initialValue","JSON","parse","name","setName","onClick","charData","setItem","stringify","storageValue","window","location","href","id","card","showCharacterDetails","className","src","thumbnail","path","alt","characterData","CONSTANTS","BASE_URL","AUTH","edit","type","changeDescription","event","payload","target","value","changeName","changesSearch","clear","request","selectCharacter","pageChange","pageNumber","dispatch","getState","term","offset","search","axios","get","constants","then","resp","data","Container","Search","List","bindActionCreators","useEffect","placeholder","onChange","results","map","renderCards","activePage","itemsCountPerPage","totalItemsCount","total","pageRangeDisplayed","bind","Button","button","InputName","input","DescriptionName","textarea","Content","Series","description","imgPath","series","editable","disabled","serie","to","AdaptativeRoutes","element","replace","Header","nav","logo","width","height","App","INITIAL_STATE","charactersReducer","action","items","rootReducer","combineReducers","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","devTools","__REDUX_DEVTOOLS_EXTENSION__","store","applyMiddleware","thunk","multi","createStore","reducers","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f73cdf1a.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Card = styled.div`\n  flex: 0 1 24%;\n\n  .img-content {\n      width: 400px;\n      height: 400px;\n      overflow: hidden;\n      background: #000;\n\n      @media screen and (max-width: 440px) {\n          width: 100%;\n      }\n\n      img {\n          width: 400px;\n          cursor: pointer;\n\n          @media screen and (max-width: 440px) {\n              width: 600px;\n          }\n      }\n  }\n\n  .card-body{\n      padding: 10px 0 20px 0;\n\n      .card-name {\n          color: #FFF;\n          font-family: 'Roboto', sans-serif;\n          text-transform: uppercase;\n          font-weight: bold;\n      }\n  }\n}\n`","import React, { useState } from 'react'\nimport {connect} from 'react-redux'\nimport { Card } from './styles.js';\n\nconst Cards = props => {\n  console.log('props', props);\n\n\n  const [name, setName] = useState(() => {\n    // getting stored value\n    const saved = localStorage.getItem(\"charData\");\n    const initialValue = JSON.parse(saved);\n    console.log('initialValue', initialValue);\n    return initialValue || null;\n  });\n\n  console.log('name', name);\n\n\n  const showCharacterDetails = (charData) => {\n  localStorage.setItem('charData', JSON.stringify(charData));\n\n  const saved = localStorage.getItem(\"charData\");\n  const storageValue = JSON.parse(saved);\n  console.log('storageValue', storageValue);\n  setName(storageValue);\n\n  window.location.href = '#/character';\n\n  \n\n\n    if (localStorage.getItem(\"charData\").id === props.card.id) {\n      console.log('sim! props.card.id', props.card.id)\n    } else {\n      console.log('n√£o', props.card.id);\n    }\n  }\n\n  return (\n    <Card onClick={() => showCharacterDetails(props.card)}>\n      <div className='img-content'>\n        <img\n          src={`${props.card.thumbnail.path}/portrait_fantastic.jpg`} \n          className=\"card-img-top\" \n          alt='character'\n        />\n      </div>\n      \n      <div className=\"card-body\">\n        <h5 className=\"card-name\">{props.characterData ? props.characterData.name : props.card.name}</h5>\n      </div>\n    </Card>\n  )\n}\n\nconst mapStateToProps = state => ({\n  list: state.character.list,\n})\nexport default connect(mapStateToProps)(Cards)","const CONSTANTS = {\n    BASE_URL: 'https://gateway.marvel.com/v1/public/characters?',\n    AUTH: `ts=heroapp&apikey=beaf888c070d611e7fffa15d0f7483de&hash=aeb8fd264e40eddfc13bae3cd65a0a4c`\n  }\n  \n  export default CONSTANTS","import axios from \"axios\";\nimport constants from \"../../util/constants\";\n\nconst edit = () => ({ type: \"CHARACTER_EDIT\" });\n\nconst changeDescription = (event) => ({\n  type: \"DESCRIPTION_CHANGED\",\n  payload: event.target.value,\n});\n\nconst changeName = (event) => ({\n  type: \"NAME_CHANGED\",\n  payload: event.target.value,\n});\n\nconst changesSearch = (event) => ({\n  type: \"SEARCH_CHANGED\",\n  payload: event.target.value,\n});\n\nconst clear = () => [{ type: \"SEARCH_CLEAR\" }, request()];\n\nconst selectCharacter = (charData) => ({\n  type: \"CHARACTER_SELECTED\",\n  payload: charData,\n});\n\nconst pageChange = (pageNumber) => [\n  { type: \"CHARACTERS_PAGECHANGE\", payload: pageNumber },\n];\n\nconst request = () => (dispatch, getState) => {\n  const pageNumber = getState().character.pageNumber;\n  const term = getState().character.term;\n  const offset = pageNumber > 1 ? `offset=${(pageNumber - 1) * 20}` : \"\";\n  const search = term ? `nameStartsWith=${term}&` : \"\";\n  axios\n    .get(constants.BASE_URL + offset + search + constants.AUTH)\n    .then((resp) => {\n      dispatch({ type: \"CHARACTERS_SEARCHED\", payload: resp.data.data });\n    });\n};\n\nexport {\n  edit,\n  changeName,\n  changeDescription,\n  clear,\n  changesSearch,\n  pageChange,\n  selectCharacter,\n  request,\n};\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  .pagination {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    list-style: none;\n    padding: 0;\n\n    li {\n      display: inline-block;\n      width: 30px;\n      height: 20px;\n      border: 1px solid #e2e2e2;\n      display: flex;\n      justify-content: center;\n      font-size: 25px;\n      border: none;\n      background-color: #000;\n      padding: 10px;\n      margin: 0 2px;\n      cursor: pointer;\n\n      &:active {\n        background-color: #4f5a6b;\n\n        a {\n          color: white;\n          font-family: \"Roboto\", sans-serif;\n          &:hover,\n          &:active {\n            color: #fff;\n          }\n        }\n      }\n\n      a {\n        text-decoration: none;\n        font-family: \"Roboto\", sans-serif;\n        color: #ccc;\n        font-size: 16px;\n        font-weight: bold;\n      }\n    }\n  }\n\n  .footer {\n    margin: 0;\n    padding-bottom: 40px;\n  }\n`;\n\nexport const Search = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  max-width: 600px;\n  margin: 30px auto;\n\n  @media screen and (max-width: 970px) {\n    width: 80%;\n}\n\n  .searchTerm {\n    width: 100%;\n    border: 3px solid #4f5a6b;\n    border-right: none;\n    padding: 5px;\n    height: 20px;\n    border-radius: 5px 0 0 5px;\n    outline: none;\n    color: #fff;\n\n    background: #000;\n  }\n\n  .searchTerm:focus {\n    color: #fff;\n  }\n\n  .searchButton {\n    border: 1px solid #4f5a6b;\n    background: #4f5a6b;\n    text-align: center;\n    color: #fff;\n    border-radius: 0 5px 5px 0;\n    cursor: pointer;\n    font-size: 14px;\n    padding: 9px 20px;\n    font-family: \"Roboto\", sans-serif;\n  }\n`;\n\nexport const List = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n  margin: 0 auto;\n  background: #222831;\n  padding: 30px;\n`;\n","import React, { useEffect } from \"react\";\nimport Cards from \"../../components/cards\";\nimport Pagination from \"react-js-pagination\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport {\n  request,\n  clear,\n  changesSearch,\n  pageChange,\n} from \"../../redux/actions/charactersAction\";\nimport { Container, Search, List } from \"./styles.js\";\n\nconst CharactersList = ({\n  request,\n  list,\n  pageChange,\n  term,\n  changesSearch,\n  pageNumber,\n}) => {\n  useEffect(() => {\n    request();\n  }, []);\n\n  const renderCards = () => {\n    const character = list.results;\n    return character?.map((card) => <Cards card={card} key={card.id} />);\n  };\n\n  const handlePageChange = (pageNumber) => {\n    pageChange(pageNumber);\n    request();\n  };\n\n  return (\n    <Container>\n      <Search>\n        <input\n          className=\"searchTerm\"\n          type=\"text\"\n          placeholder=\"Find character by name\"\n          value={term}\n          onChange={changesSearch}\n        />\n        <div>\n          <button\n            className=\"searchButton\"\n            type=\"button\"\n            onClick={() => request()}\n          >\n            Search\n          </button>\n        </div>\n      </Search>\n      <List>{renderCards()}</List>\n      <div className=\"footer\">\n        <Pagination\n          activePage={pageNumber}\n          itemsCountPerPage={20}\n          totalItemsCount={list.total}\n          pageRangeDisplayed={5}\n          onChange={handlePageChange.bind(this)}\n        />\n      </div>\n    </Container>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  term: state.character.term,\n  list: state.character.list,\n  pageNumber: state.character.pageNumber,\n});\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators({ request, clear, changesSearch, pageChange }, dispatch);\nexport default connect(mapStateToProps, mapDispatchToProps)(CharactersList);\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  margin: 0 auto;\n  background: #222831;\n  padding: 30px;\n  height: 100vh;\n\n  @media screen and (max-width: 970px) {\n    flex-direction: column;\n  }\n\n  .img-content {\n    width: 600px;\n    height: 700px;\n    overflow: hidden;\n\n    @media screen and (max-width: 970px) {\n      width: 100%;\n      overflow: initial;\n      height: 600px;\n    }\n\n    img {\n      width: 600px;\n      height: auto;\n\n      @media screen and (max-width: 970px) {\n        width: 100%;\n        overflow: visible;\n        height: auto;\n      }\n    }\n  }\n`;\n\nexport const Button = styled.button`\n  border: 4px solid #ccc;\n  padding: 16px 24px;\n  position: relative;\n  background-color: transparent;\n  display: block;\n  color: #ccc;\n\n  &:active {\n    &:after {\n      width: 100%;\n      text-decoration: none;\n    }\n  }\n`;\n\nexport const InputName = styled.input`\n  background-color: transparent;\n  padding: 15px 10px;\n  margin: 15px 0;\n  border: none;\n  color: #fff;\n  font-family: \"Roboto\", sans-serif;\n  display: block;\n  font-size: 20px;\n  width: 80%;\n\n  &:focus {\n    background-color: #4f5a6b;\n    height: 20px;\n  }\n`;\n\nexport const DescriptionName = styled.textarea`\n  background-color: transparent;\n  padding: 10px 10px;\n  margin: 15px 0;\n  border: 1px solid #4f5a6b;\n  color: #fff;\n  font-family: \"Roboto\", sans-serif;\n  display: block;\n  font-size: 14px;\n  line-height: 22px;\n  width: 80%;\n  height: 100px;\n\n  &:focus {\n    background-color: #4f5a6b;\n  }\n`;\n\nexport const Content = styled.div`\n    padding-left: 30px;\n\n    @media screen and (max-width: 970px) {\n        padding-top: 30px\n    }\n\n    .back-button {\n        margin: 50px 0 80px 0;\n    }\n}`;\n\nexport const Series = styled.div`\n  h1 {\n    font-family: \"Roboto\", sans-serif;\n    color: #fff;\n    font-size: 36px;\n    line-height: 50px;\n    margin: 0;\n  }\n\n  p {\n    font-family: \"Roboto\", sans-serif;\n    color: #fff;\n    font-size: 14px;\n    line-height: 22px;\n  }\n\n  h2 {\n    font-family: \"Roboto\", sans-serif;\n    color: #fff;\n    font-size: 18px;\n    text-transform: uppercase;\n    line-height: 26px;\n    margin-top: 40px;\n  }\n\n  ul {\n    display: block;\n    margin-left: -10px;\n  }\n\n  ul li {\n    font-family: \"Roboto\", sans-serif;\n    display: block;\n    position: relative;\n    color: #fff;\n  }\n\n  ul li:not(:last-child) {\n    margin-bottom: 16px;\n  }\n\n  ul li:before {\n    content: \"\";\n    position: absolute;\n    top: 1.2em;\n    left: -30px;\n    margin-top: -0.9em;\n    background: #343a44;\n    height: 12px;\n    width: 12px;\n    border-radius: 50%;\n  }\n`;\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport {\n  edit,\n  changeName,\n  changeDescription,\n  selectCharacter,\n} from \"../../redux/actions/charactersAction\";\nimport {\n  Container,\n  Content,\n  Button,\n  InputName,\n  DescriptionName,\n  Series,\n} from \"./styles.js\";\n\nconst CharacterDetail = ({\n  selectCharacter,\n  characterData,\n  edit,\n  editable,\n  changeName,\n  changeDescription,\n}) => {\n  useEffect(() => {\n    selectCharacter(JSON.parse(localStorage.getItem(\"charData\")));\n  }, []);\n\n  const renderSeries = () => {\n    const series = characterData.series;\n    return series.map((serie) => (\n      <li className=\"seriesList list-group-item\" key={serie.id}>\n        {serie.name}\n      </li>\n    ));\n  };\n\n  return (\n    characterData && (\n      <Container>\n        <div className=\"img-content\">\n          <img\n            src={`${characterData.imgPath}/portrait_fantastic.jpg`}\n            alt=\"character\"\n          />\n        </div>\n\n        <Content>\n          <Button type=\"button\" onClick={() => edit()}>\n            {editable ? \"Edit\" : \"Save Info\"}\n          </Button>\n\n          <InputName\n            type=\"text\"\n            className=\"input-name\"\n            disabled={editable}\n            value={characterData.name}\n            onChange={changeName}\n          />\n          <DescriptionName\n            className=\"detailsDescription\"\n            disabled={editable}\n            value={characterData.description}\n            onChange={changeDescription}\n          />\n\n          <Series>\n            <h2>Series</h2>\n            <ul>{renderSeries()}</ul>\n          </Series>\n\n          <Link to=\"/marvel-app/\">\n            <Button type=\"button\" className=\"back-button\">\n              Back\n            </Button>\n          </Link>\n        </Content>\n      </Container>\n    )\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  characterData: {\n    name: state.character.characterData.name,\n    id: state.character.characterData.id,\n    description: state.character.characterData.description,\n    imgPath: state.character.characterData.imgPath,\n    series: state.character.characterData.series,\n  },\n  editable: state.character.editable,\n});\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    { edit, changeName, changeDescription, selectCharacter },\n    dispatch\n  );\nexport default connect(mapStateToProps, mapDispatchToProps)(CharacterDetail);\n","import React from 'react'\nimport { HashRouter, Routes, Route, Navigate } from 'react-router-dom'\nimport CharactersList from '../pages/charactersList'\nimport CharacterDetail from '../pages/characterDetail'\nconst AdaptativeRoutes = props => (\n  <HashRouter>\n    <Routes>\n    <Route path=\"/\" element={<Navigate replace to=\"/marvel-app\" />}/>\n    <Route path=\"/marvel-app/\" element={<CharactersList />}/>\n    <Route path=\"/character/\" element={<CharacterDetail />}/>\n    </Routes>\n  </HashRouter>\n)\n\nexport default AdaptativeRoutes","export default __webpack_public_path__ + \"static/media/marvel.1c2327b4.svg\";","import styled from \"styled-components\";\n\nexport const Header = styled.nav`\n  position: relative;\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: space-between;\n    padding: .5rem 1rem;\n    background: #000;\n    padding: 30px 45px;\n\n\n    .logo {\n      width: 180px;\n      height: auto;\n      cursor: pointer;\n    }\n`","import React from 'react';\nimport logo from '../../util/assets/marvel.svg';\nimport { Link } from \"react-router-dom\";\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {clear} from '../../redux/actions/charactersAction'\nimport { Header } from './styles.js';\nimport { useHistory } from 'react-router-dom'\n\n\nconst Menu = ({clear}) => {\n\n  const handleClick = () => {\n    window.location.href = '/marvel-app/';\n  }\n\n  return (\n  <Header>\n    <button onClick={() => handleClick()}>\n      <img src={logo} width=\"30\" height=\"30\" className=\"logo\" alt=\"Logo Marvel\" />\n    </button>\n  </Header>\n  )\n}\n\nconst mapStateToProps = state => ({})\nconst mapDispatchToProps = dispatch => bindActionCreators({clear}, dispatch)\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu)","import './App.css';\nimport AdaptativeRoutes from './util/routes';\nimport Header from './components/header/Header';\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <AdaptativeRoutes />\n    </> \n  );\n}\n\nexport default App;\n","const INITIAL_STATE = {\n    term: '', \n    list: [], \n    characterData: {\n      name: '',\n      description: '',\n      imgPath: '',\n      series: []\n    },\n    pageNumber: 1,\n    editable: true,\n  }\n  \n  const charactersReducer = (state = INITIAL_STATE, action) => {\n      switch(action.type) {\n          case 'SEARCH_CHANGED':\n              return {...state, term: action.payload}\n          case 'CHARACTERS_SEARCHED':\n              return {...state, list: action.payload}\n          case 'SEARCH_CLEAR':\n              return {...state, term: '', pageNumber: 1}\n          case 'CHARACTER_SELECTED':\n              return {...state, \n                  characterData: {\n                    name: action.payload.name,\n                    description: action.payload.description,\n                    imgPath: action.payload.thumbnail.path,\n                    series: action.payload.series.items\n                  }\n              }\n          case 'CHARACTERS_PAGECHANGE':\n              return {...state, pageNumber: action.payload}\n          case 'CHARACTER_EDIT':\n              return {...state, editable: !state.editable}\n          case 'NAME_CHANGED':\n              return {...state, \n                characterData: {\n                  name: action.payload,\n                  description: state.characterData.description,\n                  imgPath: state.characterData.imgPath,\n                  series: state.characterData.series\n                } \n            }\n          case 'DESCRIPTION_CHANGED':\n            return {...state, \n              characterData: {\n                name: state.characterData.name,\n                description: action.payload,\n                imgPath: state.characterData.imgPath,\n                series: state.characterData.series\n              } \n          }\n          default:\n              return state\n      }\n  }\n\n  export default charactersReducer","import {combineReducers} from 'redux'\nimport charactersReducer from './reducers/charactersReducer'\n\nconst rootReducer = combineReducers({\n    character: charactersReducer\n})\n\nexport default rootReducer","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {applyMiddleware, createStore} from 'redux'\nimport {Provider} from 'react-redux'\nimport thunk from 'redux-thunk'\nimport multi from 'redux-multi'\nimport reducers from './redux/rootReducer'\nimport reportWebVitals from './reportWebVitals';\n\nconst devTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\nconst store = applyMiddleware(thunk, multi)(createStore)(reducers, devTools)\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}